
info: Initialized Piscina thread pool {"service":"user-service","timestamp":"2023-08-24T23:34:28.411Z"}
info: Listening on port 10011 {"service":"user-service","timestamp":"2023-08-24T23:34:28.496Z"}
info: Express server running {"service":"user-service","timestamp":"2023-08-24T23:34:28.497Z"}
info: Main thread connecting to dfam_dev {"service":"user-service","timestamp":"2023-08-24T23:34:29.117Z"}
info: Main thread connecting to dfam_user {"service":"user-service","timestamp":"2023-08-24T23:34:29.359Z"}
info: Worker thread 1 connecting to dfam_dev {"service":"user-service","timestamp":"2023-08-24T23:34:28.942Z"}
info: Worker thread 1 connecting to dfam_user {"service":"user-service","timestamp":"2023-08-24T23:34:29.221Z"}
info: Worker Starting Up: 1 {"service":"user-service","timestamp":"2023-08-24T23:34:29.252Z"}
info: Worker thread 2 connecting to dfam_dev {"service":"user-service","timestamp":"2023-08-24T23:34:28.942Z"}
info: Worker thread 2 connecting to dfam_user {"service":"user-service","timestamp":"2023-08-24T23:34:29.221Z"}
info: Worker Starting Up: 2 {"service":"user-service","timestamp":"2023-08-24T23:34:29.252Z"}
info: Worker thread 3 connecting to dfam_dev {"service":"user-service","timestamp":"2023-08-24T23:34:28.942Z"}
info: Worker thread 3 connecting to dfam_user {"service":"user-service","timestamp":"2023-08-24T23:34:29.221Z"}
info: Worker Starting Up: 3 {"service":"user-service","timestamp":"2023-08-24T23:34:29.252Z"}
info: Worker thread 4 connecting to dfam_dev {"service":"user-service","timestamp":"2023-08-24T23:34:28.942Z"}
info: Worker thread 4 connecting to dfam_user {"service":"user-service","timestamp":"2023-08-24T23:34:29.221Z"}
info: Worker Starting Up: 4 {"service":"user-service","timestamp":"2023-08-24T23:34:29.252Z"}
info: Worker thread 5 connecting to dfam_dev {"service":"user-service","timestamp":"2023-08-24T23:34:28.942Z"}
info: Worker thread 5 connecting to dfam_user {"service":"user-service","timestamp":"2023-08-24T23:34:29.221Z"}
info: Worker Starting Up: 5 {"service":"user-service","timestamp":"2023-08-24T23:34:29.252Z"}
  ✔ get version (923ms)
info: Main thread connecting to mm10_dfam37 {"service":"user-service","timestamp":"2023-08-24T23:34:29.448Z"}
info: Main thread connecting to hg38_dfam37 {"service":"user-service","timestamp":"2023-08-24T23:34:29.556Z"}
  ✔ get alignment success (201ms)
  ✔ get alignment failure
  ✔ get annotations (3.3s)
  ✔ get assemblies
  ✔ get blog posts (474ms)
  ✔ get classifications (793ms)
  ✔ search classifications
  ✔ search families
  ✔ search families query limit (3.8s)
  ✔ search families with consensi (7.1s)
  ✔ search raw families (2.8s)
  ✔ search families sorted by subtype
info: Worker: 1 , command = fasta_command {"service":"user-service","timestamp":"2023-08-24T23:34:48.283Z"}
info: Worker: 1 , command = embl_command {"service":"user-service","timestamp":"2023-08-24T23:34:48.685Z"}
info: Worker: 1 , command = hmm_command {"service":"user-service","timestamp":"2023-08-24T23:34:50.350Z"}
  ✔ download families (3.7s)
  ✔ get family
info: Worker: 1 , command = hmm_command {"service":"user-service","timestamp":"2023-08-24T23:34:52.055Z"}
  ✔ get family HMM (410ms)
  ✔ get family HMM image (549ms)
  ✔ get family HMM sequence
info: Worker: 1 , command = fasta_command {"service":"user-service","timestamp":"2023-08-24T23:34:53.016Z"}
info: Worker: 2 , command = embl_command {"service":"user-service","timestamp":"2023-08-24T23:34:53.025Z"}
info: Worker: 1 , command = fasta_command {"service":"user-service","timestamp":"2023-08-24T23:34:53.595Z"}
  ✔ get family sequence (1s)
info: Worker: 1 , command = fasta_command {"service":"user-service","timestamp":"2023-08-24T23:34:54.022Z"}
info: Worker: 2 , command = stockholm_command {"service":"user-service","timestamp":"2023-08-24T23:34:54.030Z"}
  ✔ get family seed (756ms)
  ✔ get family relationships
  ✘ [fail]: get family relationships include Test failed via `t.fail()`
  ✘ [fail]: get family relationships include_raw Test failed via `t.fail()`
  ✔ get family assemblies
  ✔ get family annotation stats
  ✔ get family assembly stats
info: Main thread connecting to danRer10_dfam35 {"service":"user-service","timestamp":"2023-08-24T23:34:54.890Z"}
  ✔ get family assembly annotations
  ✔ get family assembly karyotype
  ✔ get family assembly coverage
  ✔ get family assembly conservation
  ✔ get taxa (1.3s)
  ✘ [fail]: get taxa annotated Test failed via `t.fail()`
  ✘ [fail]: get taxa limited Test failed via `t.fail()`
  ✔ get one taxon
  ✔ get taxa coverage
  ✔ submit search (134ms)
  ✔ read search results (153ms)
  ✔ read search result alignments (288ms)
  ─

  get family relationships include

  test/api.js:274

   273: test.serial('get family relationships include', async t => {
   274:   t.fail()                                                  
   275: });                                                         

  Test failed via `t.fail()`

  › test/api.js:274:5



  get family relationships include_raw

  test/api.js:278

   277: test.serial('get family relationships include_raw', async t => {
   278:   t.fail()                                                      
   279: });                                                             

  Test failed via `t.fail()`

  › test/api.js:278:5



  get taxa annotated

  test/api.js:332

   331: test.serial('get taxa annotated', async t => {
   332:   t.fail()                                    
   333: });                                           

  Test failed via `t.fail()`

  › test/api.js:332:5



  get taxa limited

  test/api.js:336

   335: test.serial('get taxa limited', async t => {
   336:   t.fail()                                  
   337: });                                         

  Test failed via `t.fail()`

  › test/api.js:336:5

  ─

  4 tests failed
