
info: Initialized Piscina thread pool {"service":"user-service","timestamp":"2023-11-16T01:21:22.174Z"}
info: Listening on port 10011 {"service":"user-service","timestamp":"2023-11-16T01:21:22.269Z"}
info: Express server running {"service":"user-service","timestamp":"2023-11-16T01:21:22.270Z"}
info: Main thread connecting to dfam_dev {"service":"user-service","timestamp":"2023-11-16T01:21:22.852Z"}
info: Main thread connecting to dfam_user {"service":"user-service","timestamp":"2023-11-16T01:21:23.057Z"}
info: Worker thread 1 connecting to dfam_dev {"service":"user-service","timestamp":"2023-11-16T01:21:22.581Z"}
info: Worker thread 1 connecting to dfam_user {"service":"user-service","timestamp":"2023-11-16T01:21:22.798Z"}
info: Worker Starting Up: 1 {"service":"user-service","timestamp":"2023-11-16T01:21:22.824Z"}
info: Worker thread 2 connecting to dfam_dev {"service":"user-service","timestamp":"2023-11-16T01:21:22.583Z"}
info: Worker thread 2 connecting to dfam_user {"service":"user-service","timestamp":"2023-11-16T01:21:22.798Z"}
info: Worker Starting Up: 2 {"service":"user-service","timestamp":"2023-11-16T01:21:22.824Z"}
info: Worker thread 3 connecting to dfam_dev {"service":"user-service","timestamp":"2023-11-16T01:21:22.585Z"}
info: Worker thread 3 connecting to dfam_user {"service":"user-service","timestamp":"2023-11-16T01:21:22.805Z"}
info: Worker Starting Up: 3 {"service":"user-service","timestamp":"2023-11-16T01:21:22.831Z"}
info: Worker thread 4 connecting to dfam_dev {"service":"user-service","timestamp":"2023-11-16T01:21:22.577Z"}
info: Worker thread 4 connecting to dfam_user {"service":"user-service","timestamp":"2023-11-16T01:21:22.797Z"}
info: Worker Starting Up: 4 {"service":"user-service","timestamp":"2023-11-16T01:21:22.823Z"}
info: Worker thread 5 connecting to dfam_dev {"service":"user-service","timestamp":"2023-11-16T01:21:22.578Z"}
info: Worker thread 5 connecting to dfam_user {"service":"user-service","timestamp":"2023-11-16T01:21:22.797Z"}
info: Worker Starting Up: 5 {"service":"user-service","timestamp":"2023-11-16T01:21:22.824Z"}
  ✔ get version (833ms)
info: Main thread connecting to mm10_df38 {"service":"user-service","timestamp":"2023-11-16T01:21:23.138Z"}
info: Main thread connecting to hg38_df38 {"service":"user-service","timestamp":"2023-11-16T01:21:23.275Z"}
  ✔ get alignment success (242ms)
  ✔ get alignment failure
  ✔ get annotations (3.7s)
  ✔ get assemblies
  ✔ get blog posts (376ms)
  ✔ get classifications (896ms)
  ✔ search classifications
  ✔ search families
  ✔ search families query limit (4.2s)
  ✔ search families with consensi (7.1s)
  ✔ search raw families (4.2s)
  ✔ search families sorted by subtype
  ✔ search families name_prefix
  ✔ search families classification (176ms)
  ✔ search families type (778ms)
  ✔ search families desc (150ms)
  ✔ search families keywords (127ms)
  ✔ search families start (319ms)
  ✔ search families updated (1.7s)
info: Worker: 1 , command = fasta_command {"service":"user-service","timestamp":"2023-11-16T01:21:47.601Z"}
info: Worker: 1 , command = embl_command {"service":"user-service","timestamp":"2023-11-16T01:21:48.081Z"}
info: Worker: 1 , command = hmm_command {"service":"user-service","timestamp":"2023-11-16T01:21:49.860Z"}
  ✔ download families (3.9s)
  ✔ test caching
  ✔ get family
info: Worker: 1 , command = hmm_command {"service":"user-service","timestamp":"2023-11-16T01:21:51.568Z"}
  ✔ get family HMM (454ms)
  ✔ get family HMM image (578ms)
  ✔ get family HMM sequence
info: Worker: 1 , command = fasta_command {"service":"user-service","timestamp":"2023-11-16T01:21:52.603Z"}
info: Worker: 2 , command = embl_command {"service":"user-service","timestamp":"2023-11-16T01:21:52.614Z"}
info: Worker: 1 , command = fasta_command {"service":"user-service","timestamp":"2023-11-16T01:21:53.267Z"}
  ✔ get family sequence (1.1s)
info: Worker: 1 , command = fasta_command {"service":"user-service","timestamp":"2023-11-16T01:21:53.715Z"}
info: Worker: 2 , command = stockholm_command {"service":"user-service","timestamp":"2023-11-16T01:21:53.724Z"}
  ✔ get family seed (768ms)
  ✔ get family relationships
  ✔ get family relationships include
  ✔ get family relationships include_raw
  ✔ get family assemblies
  ✔ get family annotation stats
  ✔ get family assembly stats
info: Main thread connecting to danRer10_df38 {"service":"user-service","timestamp":"2023-11-16T01:21:54.668Z"}
  ✔ get family assembly annotations
  ✔ get family assembly karyotype
  ✔ get family assembly coverage
  ✔ get family assembly conservation
  ✔ get taxa (1.6s)
  ✔ get taxa annotated (1.5s)
  ✔ get taxa limited (3s)
  ✔ get one taxon
  ✔ get taxa coverage
  ✔ submit search
  ✔ read search results (172ms)
  ✔ read search result alignments (352ms)
  ─

  46 tests passed
